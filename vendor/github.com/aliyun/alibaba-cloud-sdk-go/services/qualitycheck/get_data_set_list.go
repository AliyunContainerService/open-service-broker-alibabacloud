package qualitycheck

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetDataSetList invokes the qualitycheck.GetDataSetList API synchronously
// api document: https://help.aliyun.com/api/qualitycheck/getdatasetlist.html
func (client *Client) GetDataSetList(request *GetDataSetListRequest) (response *GetDataSetListResponse, err error) {
	response = CreateGetDataSetListResponse()
	err = client.DoAction(request, response)
	return
}

// GetDataSetListWithChan invokes the qualitycheck.GetDataSetList API asynchronously
// api document: https://help.aliyun.com/api/qualitycheck/getdatasetlist.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetDataSetListWithChan(request *GetDataSetListRequest) (<-chan *GetDataSetListResponse, <-chan error) {
	responseChan := make(chan *GetDataSetListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetDataSetList(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetDataSetListWithCallback invokes the qualitycheck.GetDataSetList API asynchronously
// api document: https://help.aliyun.com/api/qualitycheck/getdatasetlist.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetDataSetListWithCallback(request *GetDataSetListRequest, callback func(response *GetDataSetListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetDataSetListResponse
		var err error
		defer close(result)
		response, err = client.GetDataSetList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetDataSetListRequest is the request struct for api GetDataSetList
type GetDataSetListRequest struct {
	*requests.RpcRequest
	ResourceOwnerId requests.Integer `position:"Query" name:"ResourceOwnerId"`
	JsonStr         string           `position:"Query" name:"JsonStr"`
}

// GetDataSetListResponse is the response struct for api GetDataSetList
type GetDataSetListResponse struct {
	*responses.BaseResponse
	RequestId string               `json:"RequestId" xml:"RequestId"`
	Success   bool                 `json:"Success" xml:"Success"`
	Code      string               `json:"Code" xml:"Code"`
	Message   string               `json:"Message" xml:"Message"`
	Count     int                  `json:"Count" xml:"Count"`
	Data      DataInGetDataSetList `json:"Data" xml:"Data"`
}

// CreateGetDataSetListRequest creates a request to invoke GetDataSetList API
func CreateGetDataSetListRequest() (request *GetDataSetListRequest) {
	request = &GetDataSetListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Qualitycheck", "2019-01-15", "GetDataSetList", "", "")
	return
}

// CreateGetDataSetListResponse creates a response to parse from GetDataSetList response
func CreateGetDataSetListResponse() (response *GetDataSetListResponse) {
	response = &GetDataSetListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
