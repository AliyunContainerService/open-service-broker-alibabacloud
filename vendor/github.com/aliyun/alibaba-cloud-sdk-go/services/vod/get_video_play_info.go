package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetVideoPlayInfo invokes the vod.GetVideoPlayInfo API synchronously
// api document: https://help.aliyun.com/api/vod/getvideoplayinfo.html
func (client *Client) GetVideoPlayInfo(request *GetVideoPlayInfoRequest) (response *GetVideoPlayInfoResponse, err error) {
	response = CreateGetVideoPlayInfoResponse()
	err = client.DoAction(request, response)
	return
}

// GetVideoPlayInfoWithChan invokes the vod.GetVideoPlayInfo API asynchronously
// api document: https://help.aliyun.com/api/vod/getvideoplayinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetVideoPlayInfoWithChan(request *GetVideoPlayInfoRequest) (<-chan *GetVideoPlayInfoResponse, <-chan error) {
	responseChan := make(chan *GetVideoPlayInfoResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetVideoPlayInfo(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetVideoPlayInfoWithCallback invokes the vod.GetVideoPlayInfo API asynchronously
// api document: https://help.aliyun.com/api/vod/getvideoplayinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetVideoPlayInfoWithCallback(request *GetVideoPlayInfoRequest, callback func(response *GetVideoPlayInfoResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetVideoPlayInfoResponse
		var err error
		defer close(result)
		response, err = client.GetVideoPlayInfo(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetVideoPlayInfoRequest is the request struct for api GetVideoPlayInfo
type GetVideoPlayInfoRequest struct {
	*requests.RpcRequest
	SignVersion          string           `position:"Query" name:"SignVersion"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ClientVersion        string           `position:"Query" name:"ClientVersion"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	Channel              string           `position:"Query" name:"Channel"`
	PlaySign             string           `position:"Query" name:"PlaySign"`
	VideoId              string           `position:"Query" name:"VideoId"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	ClientTS             requests.Integer `position:"Query" name:"ClientTS"`
}

// GetVideoPlayInfoResponse is the response struct for api GetVideoPlayInfo
type GetVideoPlayInfoResponse struct {
	*responses.BaseResponse
	RequestId string    `json:"RequestId" xml:"RequestId"`
	PlayInfo  PlayInfo  `json:"PlayInfo" xml:"PlayInfo"`
	VideoInfo VideoInfo `json:"VideoInfo" xml:"VideoInfo"`
}

// CreateGetVideoPlayInfoRequest creates a request to invoke GetVideoPlayInfo API
func CreateGetVideoPlayInfoRequest() (request *GetVideoPlayInfoRequest) {
	request = &GetVideoPlayInfoRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "GetVideoPlayInfo", "vod", "openAPI")
	return
}

// CreateGetVideoPlayInfoResponse creates a response to parse from GetVideoPlayInfo response
func CreateGetVideoPlayInfoResponse() (response *GetVideoPlayInfoResponse) {
	response = &GetVideoPlayInfoResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
