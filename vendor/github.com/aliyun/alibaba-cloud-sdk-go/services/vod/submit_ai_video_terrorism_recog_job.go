package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// SubmitAIVideoTerrorismRecogJob invokes the vod.SubmitAIVideoTerrorismRecogJob API synchronously
// api document: https://help.aliyun.com/api/vod/submitaivideoterrorismrecogjob.html
func (client *Client) SubmitAIVideoTerrorismRecogJob(request *SubmitAIVideoTerrorismRecogJobRequest) (response *SubmitAIVideoTerrorismRecogJobResponse, err error) {
	response = CreateSubmitAIVideoTerrorismRecogJobResponse()
	err = client.DoAction(request, response)
	return
}

// SubmitAIVideoTerrorismRecogJobWithChan invokes the vod.SubmitAIVideoTerrorismRecogJob API asynchronously
// api document: https://help.aliyun.com/api/vod/submitaivideoterrorismrecogjob.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SubmitAIVideoTerrorismRecogJobWithChan(request *SubmitAIVideoTerrorismRecogJobRequest) (<-chan *SubmitAIVideoTerrorismRecogJobResponse, <-chan error) {
	responseChan := make(chan *SubmitAIVideoTerrorismRecogJobResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SubmitAIVideoTerrorismRecogJob(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// SubmitAIVideoTerrorismRecogJobWithCallback invokes the vod.SubmitAIVideoTerrorismRecogJob API asynchronously
// api document: https://help.aliyun.com/api/vod/submitaivideoterrorismrecogjob.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SubmitAIVideoTerrorismRecogJobWithCallback(request *SubmitAIVideoTerrorismRecogJobRequest, callback func(response *SubmitAIVideoTerrorismRecogJobResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SubmitAIVideoTerrorismRecogJobResponse
		var err error
		defer close(result)
		response, err = client.SubmitAIVideoTerrorismRecogJob(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// SubmitAIVideoTerrorismRecogJobRequest is the request struct for api SubmitAIVideoTerrorismRecogJob
type SubmitAIVideoTerrorismRecogJobRequest struct {
	*requests.RpcRequest
	UserData                    string `position:"Query" name:"UserData"`
	ResourceOwnerId             string `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount        string `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount                string `position:"Query" name:"OwnerAccount"`
	AIVideoTerrorismRecogConfig string `position:"Query" name:"AIVideoTerrorismRecogConfig"`
	OwnerId                     string `position:"Query" name:"OwnerId"`
	MediaId                     string `position:"Query" name:"MediaId"`
}

// SubmitAIVideoTerrorismRecogJobResponse is the response struct for api SubmitAIVideoTerrorismRecogJob
type SubmitAIVideoTerrorismRecogJobResponse struct {
	*responses.BaseResponse
	RequestId                string                   `json:"RequestId" xml:"RequestId"`
	AIVideoTerrorismRecogJob AIVideoTerrorismRecogJob `json:"AIVideoTerrorismRecogJob" xml:"AIVideoTerrorismRecogJob"`
}

// CreateSubmitAIVideoTerrorismRecogJobRequest creates a request to invoke SubmitAIVideoTerrorismRecogJob API
func CreateSubmitAIVideoTerrorismRecogJobRequest() (request *SubmitAIVideoTerrorismRecogJobRequest) {
	request = &SubmitAIVideoTerrorismRecogJobRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "SubmitAIVideoTerrorismRecogJob", "vod", "openAPI")
	return
}

// CreateSubmitAIVideoTerrorismRecogJobResponse creates a response to parse from SubmitAIVideoTerrorismRecogJob response
func CreateSubmitAIVideoTerrorismRecogJobResponse() (response *SubmitAIVideoTerrorismRecogJobResponse) {
	response = &SubmitAIVideoTerrorismRecogJobResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
