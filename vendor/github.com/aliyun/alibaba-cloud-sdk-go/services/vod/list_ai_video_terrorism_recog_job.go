package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ListAIVideoTerrorismRecogJob invokes the vod.ListAIVideoTerrorismRecogJob API synchronously
// api document: https://help.aliyun.com/api/vod/listaivideoterrorismrecogjob.html
func (client *Client) ListAIVideoTerrorismRecogJob(request *ListAIVideoTerrorismRecogJobRequest) (response *ListAIVideoTerrorismRecogJobResponse, err error) {
	response = CreateListAIVideoTerrorismRecogJobResponse()
	err = client.DoAction(request, response)
	return
}

// ListAIVideoTerrorismRecogJobWithChan invokes the vod.ListAIVideoTerrorismRecogJob API asynchronously
// api document: https://help.aliyun.com/api/vod/listaivideoterrorismrecogjob.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ListAIVideoTerrorismRecogJobWithChan(request *ListAIVideoTerrorismRecogJobRequest) (<-chan *ListAIVideoTerrorismRecogJobResponse, <-chan error) {
	responseChan := make(chan *ListAIVideoTerrorismRecogJobResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListAIVideoTerrorismRecogJob(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ListAIVideoTerrorismRecogJobWithCallback invokes the vod.ListAIVideoTerrorismRecogJob API asynchronously
// api document: https://help.aliyun.com/api/vod/listaivideoterrorismrecogjob.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ListAIVideoTerrorismRecogJobWithCallback(request *ListAIVideoTerrorismRecogJobRequest, callback func(response *ListAIVideoTerrorismRecogJobResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListAIVideoTerrorismRecogJobResponse
		var err error
		defer close(result)
		response, err = client.ListAIVideoTerrorismRecogJob(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ListAIVideoTerrorismRecogJobRequest is the request struct for api ListAIVideoTerrorismRecogJob
type ListAIVideoTerrorismRecogJobRequest struct {
	*requests.RpcRequest
	ResourceOwnerId             string `position:"Query" name:"ResourceOwnerId"`
	AIVideoTerrorismRecogJobIds string `position:"Query" name:"AIVideoTerrorismRecogJobIds"`
	ResourceOwnerAccount        string `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount                string `position:"Query" name:"OwnerAccount"`
	OwnerId                     string `position:"Query" name:"OwnerId"`
}

// ListAIVideoTerrorismRecogJobResponse is the response struct for api ListAIVideoTerrorismRecogJob
type ListAIVideoTerrorismRecogJobResponse struct {
	*responses.BaseResponse
	RequestId                    string                       `json:"RequestId" xml:"RequestId"`
	NonExistTerrorismRecogJobIds NonExistTerrorismRecogJobIds `json:"NonExistTerrorismRecogJobIds" xml:"NonExistTerrorismRecogJobIds"`
	AIVideoTerrorismRecogJobList AIVideoTerrorismRecogJobList `json:"AIVideoTerrorismRecogJobList" xml:"AIVideoTerrorismRecogJobList"`
}

// CreateListAIVideoTerrorismRecogJobRequest creates a request to invoke ListAIVideoTerrorismRecogJob API
func CreateListAIVideoTerrorismRecogJobRequest() (request *ListAIVideoTerrorismRecogJobRequest) {
	request = &ListAIVideoTerrorismRecogJobRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "ListAIVideoTerrorismRecogJob", "vod", "openAPI")
	return
}

// CreateListAIVideoTerrorismRecogJobResponse creates a response to parse from ListAIVideoTerrorismRecogJob response
func CreateListAIVideoTerrorismRecogJobResponse() (response *ListAIVideoTerrorismRecogJobResponse) {
	response = &ListAIVideoTerrorismRecogJobResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
