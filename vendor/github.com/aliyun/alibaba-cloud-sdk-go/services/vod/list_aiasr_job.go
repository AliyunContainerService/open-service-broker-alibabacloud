package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ListAIASRJob invokes the vod.ListAIASRJob API synchronously
// api document: https://help.aliyun.com/api/vod/listaiasrjob.html
func (client *Client) ListAIASRJob(request *ListAIASRJobRequest) (response *ListAIASRJobResponse, err error) {
	response = CreateListAIASRJobResponse()
	err = client.DoAction(request, response)
	return
}

// ListAIASRJobWithChan invokes the vod.ListAIASRJob API asynchronously
// api document: https://help.aliyun.com/api/vod/listaiasrjob.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ListAIASRJobWithChan(request *ListAIASRJobRequest) (<-chan *ListAIASRJobResponse, <-chan error) {
	responseChan := make(chan *ListAIASRJobResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListAIASRJob(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ListAIASRJobWithCallback invokes the vod.ListAIASRJob API asynchronously
// api document: https://help.aliyun.com/api/vod/listaiasrjob.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ListAIASRJobWithCallback(request *ListAIASRJobRequest, callback func(response *ListAIASRJobResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListAIASRJobResponse
		var err error
		defer close(result)
		response, err = client.ListAIASRJob(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ListAIASRJobRequest is the request struct for api ListAIASRJob
type ListAIASRJobRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      string `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string `position:"Query" name:"OwnerAccount"`
	OwnerId              string `position:"Query" name:"OwnerId"`
	AIASRJobIds          string `position:"Query" name:"AIASRJobIds"`
}

// ListAIASRJobResponse is the response struct for api ListAIASRJob
type ListAIASRJobResponse struct {
	*responses.BaseResponse
	RequestId           string              `json:"RequestId" xml:"RequestId"`
	NonExistAIASRJobIds NonExistAIASRJobIds `json:"NonExistAIASRJobIds" xml:"NonExistAIASRJobIds"`
	AIASRJobList        AIASRJobList        `json:"AIASRJobList" xml:"AIASRJobList"`
}

// CreateListAIASRJobRequest creates a request to invoke ListAIASRJob API
func CreateListAIASRJobRequest() (request *ListAIASRJobRequest) {
	request = &ListAIASRJobRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "ListAIASRJob", "vod", "openAPI")
	return
}

// CreateListAIASRJobResponse creates a response to parse from ListAIASRJob response
func CreateListAIASRJobResponse() (response *ListAIASRJobResponse) {
	response = &ListAIASRJobResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
